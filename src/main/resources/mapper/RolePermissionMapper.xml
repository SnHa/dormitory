<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atsun.dormitory.dao.RolePermissionMapper">
    <resultMap id="BaseResultMap" type="com.atsun.dormitory.po.RolePermission">
        <!--@mbg.generated-->
        <!--@Table role_permission-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="permission_id" jdbcType="VARCHAR" property="permissionId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, role_id, permission_id, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from role_permission
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete from role_permission
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.atsun.dormitory.po.RolePermission">
        <!--@mbg.generated-->
        insert into role_permission (id, role_id, permission_id,
        create_time, update_time)
        values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{permissionId,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.atsun.dormitory.po.RolePermission">
        <!--@mbg.generated-->
        insert into role_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="permissionId != null">
                permission_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="permissionId != null">
                #{permissionId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.atsun.dormitory.po.RolePermission">
        <!--@mbg.generated-->
        update role_permission
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="permissionId != null">
                permission_id = #{permissionId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.atsun.dormitory.po.RolePermission">
        <!--@mbg.generated-->
        update role_permission
        set role_id = #{roleId,jdbcType=VARCHAR},
        permission_id = #{permissionId,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="findPermissionIds" resultType="java.lang.String">
        SELECT o.permission_id FROM role_permission o WHERE o.role_id
        <foreach collection="roleIds" item="id" open="IN(" separator="," close=")">
            #{id,jdbcType=VARCHAR}
        </foreach>
    </select>
    <delete id="deleteByPermissionId">
        delete from role_permission o
        where o.permission_id = #{permissionId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByRoleId">
        DELETE FROM role_permission o WHERE o.role_id=#{roleId,jdbcType=VARCHAR}
    </delete>
    <insert id="inserts">
            INSERT INTO role_permission (ID, ROLE_ID, PERMISSION_ID, CREATE_TIME, UPDATE_TIME) VALUES
            <foreach collection="rolePermissions" item="rolePermission" separator=",">
                (#{rolePermission.id,jdbcType=VARCHAR},#{rolePermission.roleId,jdbcType=VARCHAR},#{rolePermission.permissionId,jdbcType=VARCHAR},#{rolePermission.createTime,jdbcType=TIMESTAMP},#{rolePermission.updateTime,jdbcType=TIMESTAMP})
            </foreach>

    </insert>
</mapper>
